# FILE: .github/workflows/bot.yml
# FINAL REBUILD: This version uses the simpler, more robust command pattern you suggested.

name: PR Bot Commands

on:
  issue_comment:
    types: [created]
  pull_request:
    types: [review_requested]

permissions:
  pull-requests: write
  contents: read

jobs:
  bot-handler:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'issue_comment' && github.event.issue.pull_request) ||
      (github.event_name == 'pull_request' && github.event.requested_reviewer.login == 'PriestyBot')

    steps:
      - name: 'Set up PR Context'
        id: pr_context
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            gh pr view ${{ github.event.issue.number }} --json number,headRefOid -R ${{ github.repository }} > pr.json
            echo "pr_number=$(jq .number pr.json)" >> $GITHUB_OUTPUT
            echo "pr_sha=$(jq -r .headRefOid pr.json)" >> $GITHUB_OUTPUT
          else
            echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
            echo "pr_sha=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # --- COMMANDS REBUILT USING YOUR SUGGESTED, SIMPLER PATTERN ---

      - name: 'Handle Command: /approve'
        if: startsWith(github.event.comment.body, '/approve')
        env:
          GH_TOKEN: ${{ secrets.APPROVER_TOKEN }}
          PR_NUMBER: ${{ steps.pr_context.outputs.pr_number }}
          REPO: ${{ github.repository }}
          MESSAGE: "‚úÖ Approved based on the command from @${{ github.event.comment.user.login }}."
        run: |
          gh pr review $PR_NUMBER --approve --body "$MESSAGE" -R $REPO
          
      - name: 'Handle Command: /request-changes'
        if: startsWith(github.event.comment.body, '/request-changes')
        env:
          GH_TOKEN: ${{ secrets.APPROVER_TOKEN }}
          PR_NUMBER: ${{ steps.pr_context.outputs.pr_number }}
          REPO: ${{ github.repository }}
          COMMENT_BODY: "${{ github.event.comment.body }}"
          USER_LOGIN: ${{ github.event.comment.user.login }}
        run: |
          # Use 'cut' to safely get all text after the command
          CHANGES_TEXT=$(echo "$COMMENT_BODY" | cut -c 18-)
          MESSAGE="üö® Changes Requested by @$USER_LOGIN: $CHANGES_TEXT"
          gh pr review $PR_NUMBER --request-changes --body "$MESSAGE" -R $REPO
          
      - name: 'Handle Command: /comment'
        if: startsWith(github.event.comment.body, '/comment')
        env:
          GH_TOKEN: ${{ secrets.APPROVER_TOKEN }}
          PR_NUMBER: ${{ steps.pr_context.outputs.pr_number }}
          REPO: ${{ github.repository }}
          COMMENT_BODY: "${{ github.event.comment.body }}"
          USER_LOGIN: ${{ github.event.comment.user.login }}
        run: |
          # Use 'cut' to safely get all text after the command
          COMMENT_TEXT=$(echo "$COMMENT_BODY" | cut -c 9-)
          MESSAGE="üí¨ @$USER_LOGIN asked me to leave a comment: $COMMENT_TEXT"
          gh pr comment $PR_NUMBER --body "$MESSAGE" -R $REPO
      
      - name: 'Start Review (for /review command or review_request event)'
        if: >
          startsWith(github.event.comment.body, '/review') ||
          github.event.action == 'review_requested'
        env:
          GH_TOKEN: ${{ secrets.APPROVER_TOKEN }}
          PR_NUMBER: ${{ steps.pr_context.outputs.pr_number }}
          REPO: ${{ github.repository }}
        run: |
          gh pr comment $PR_NUMBER -b "Alright, I'll take a look at this PR now. I'll check the code style and see if the app runs. Back in a moment! ‚òï" -R $REPO
          
      # --- AUTOMATED REVIEW STEPS (Remain the same, as they are necessary for the review) ---

      - name: 'Automated Review: Checkout Code'
        if: >
          startsWith(github.event.comment.body, '/review') ||
          github.event.action == 'review_requested'
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr_context.outputs.pr_sha }}

      - name: 'Automated Review: Setup and Install'
        # ... (This and subsequent review steps are unchanged)
        if: >
          startsWith(github.event.comment.body, '/review') ||
          github.event.action == 'review_requested'
        run: |
          sudo apt-get update && sudo apt-get install -y python3-tk xvfb
          python -m pip install --upgrade pip
          pip install flake8
          
      - name: 'Automated Review: Run Linter'
        if: >
          startsWith(github.event.comment.body, '/review') ||
          github.event.action == 'review_requested'
        run: |
          flake8 src/main.py > linting-results.txt || true
          
      - name: 'Automated Review: Run App Test'
        if: >
          startsWith(github.event.comment.body, '/review') ||
          github.event.action == 'review_requested'
        run: |
          timeout 10s xvfb-run python src/main.py &> app-run-log.txt
          if [ $? -eq 124 ]; then
            echo "success" > app-run-status.txt
          else
            echo "failure" > app-run-status.txt
          fi

      - name: 'Automated Review: Post Results'
        if: >
          startsWith(github.event.comment.body, '/review') ||
          github.event.action == 'review_requested'
        env:
          GH_TOKEN: ${{ secrets.APPROVER_TOKEN }}
          PR_NUMBER: ${{ steps.pr_context.outputs.pr_number }}
          REPO: ${{ github.repository }}
        run: |
          FINAL_COMMENT="Okay, I've finished my review. Here are my thoughts:\n\n"
          if [ -s linting-results.txt ]; then
            LINTING_RESULTS=$(cat linting-results.txt)
            FINAL_COMMENT+="**Code Style Check:**\nI ran a linter over \`src/main.py\` and found a few things that could be improved for style and quality. Here's the output:\n\`\`\`\n${LINTING_RESULTS}\n\`\`\`\n\n"
          else
            FINAL_COMMENT+="**Code Style Check:**\nLooks great! I ran it through the linter and didn't find any issues. Nice work. ‚úÖ\n\n"
          fi
          APP_RUN_STATUS=$(cat app-run-status.txt)
          if [ "$APP_RUN_STATUS" == "success" ]; then
            FINAL_COMMENT+="**Application Test:**\nNext, I tried running the Tkinter app. It launched without any immediate crashes, which is a good sign! üëç\n\n"
          else
            APP_RUN_LOG=$(cat app-run-log.txt)
            FINAL_COMMENT+="**Application Test:**\nI then tried to run the Tkinter app, but it seems to have run into a problem. Here's the log from the attempt, which might help you debug it:\n\`\`\`\n${APP_RUN_LOG}\n\`\`\`\n\n"
          fi
          if [ "$APP_RUN_STATUS" == "success" ] && ! [ -s linting-results.txt ]; then
            FINAL_COMMENT+="**Summary:**\nOverall, this looks good to me! No issues found in the automated check."
          else
            FINAL_COMMENT+="**Summary:**\nPlease take a look at the points above. Once those are addressed, it should be in good shape. Let me know if you have any questions!"
          fi
          gh pr comment $PR_NUMBER --body "$FINAL_COMMENT" -R $REPO
