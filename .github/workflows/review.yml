name: On-Demand PR Review

on:
  issue_comment:
    types: [created]

jobs:
  review:
    # This job only runs when a comment with the exact body '/review' is made on a PR
    if: github.event.issue.pull_request && github.event.comment.body == '/review'
    runs-on: ubuntu-latest
    name: Run Pylint Review

    # Grant permissions for the bot to write PR reviews and comments
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Acknowledge Command with a Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ü§ñ Understood! I'm starting the on-demand review.
            I will post the results as comments and then submit a final review status.

      - name: Check out PR code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.issue.pull_request.head.sha }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install reviewdog
        run: curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin

      - name: Run Pylint and save output
        # Save the pylint report to a file. The '|| true' prevents this step
        # from failing if pylint finds issues.
        run: pylint src > pylint-report.log || true

      - name: Post inline comments with Reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Reviewdog reads the report and creates inline comments on the PR
          cat pylint-report.log | reviewdog -f=pylint -name="Pylint Suggestions" -reporter=github-pr-review -level=info

      - name: Submit Final Review (Approve or Request Changes)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Read the pylint report file
            const fs = require('fs');
            const report = fs.readFileSync('pylint-report.log', 'utf8');

            // Determine the review event and body text
            let reviewEvent = 'APPROVE';
            let reviewBody = '‚úÖ Great work! I found no issues to report. This PR is approved.';

            // If the report is not empty, request changes
            if (report.trim().length > 0) {
              reviewEvent = 'REQUEST_CHANGES';
              reviewBody = '‚ö†Ô∏è I found some areas for improvement. I have left suggestions as inline comments on the relevant lines of code. Please review them.';
            }

            // Submit the formal PR review
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: reviewEvent,
              body: reviewBody,
            });