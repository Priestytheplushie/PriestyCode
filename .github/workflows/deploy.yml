name: Create Release and Deploy

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*'

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release Executable
    environment: Production 
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build the .exe using the .spec file
        run: |
          # We no longer need all the flags, we just point to our spec file.
          pyinstaller main.spec

      - name: Prepare Release Package
        run: |
          # Create a 'release' folder to hold everything for the zip.
          New-Item -ItemType Directory -Path "release"
          
          # Copy the final executable into the release folder.
          Copy-Item -Path "dist/PriestyCode.exe" -Destination "release/PriestyCode.exe"
          
          # Optional: Copy other files like README or LICENSE into the release folder.
          # if (Test-Path "README.md") { Copy-Item -Path "README.md" -Destination "release/README.md" }
          # if (Test-Path "LICENSE") { Copy-Item -Path "LICENSE" -Destination "release/LICENSE" }
          
          # Create the final zip file from the contents of the 'release' folder.
          $zipName = "${{ github.event.repository.name }}-${{ github.ref_name }}.zip"
          Compress-Archive -Path "release/*" -DestinationPath $zipName
          echo "ZIP_NAME=$zipName" >> $env:GITHUB_ENV
        shell: powershell

      - name: Create GitHub Release and Upload Asset
        run: |
          gh release create "${{ github.ref_name }}" --generate-notes --title "${{ github.ref_name }}" "${{ env.ZIP_NAME }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}