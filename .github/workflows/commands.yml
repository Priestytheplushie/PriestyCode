name: PriestyBot Commands

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

jobs:
  # This job handles simple commands that just post a message or review
  simple-commands:
    if: |
      github.event.issue.pull_request &&
      github.event.comment.user.login == github.event.issue.user.login &&
      !startsWith(github.event.comment.body, '/format') && !(contains(github.event.comment.body, '@PriestyBot') && contains(github.event.comment.body, 'format'))
    runs-on: ubuntu-latest
    steps:
      - name: Generate Bot Token
        id: get_token
        uses: actions/create-github-app-token@v1
        with:
          app_id: ${{ secrets.PRIESTYBOT_APP_ID }}
          private_key: ${{ secrets.PRIESTYBOT_PRIVATE_KEY }}

      - name: Handle Simple Commands
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.get_token.outputs.token }}
          script: |
            const { payload, issue, repo } = context;
            const comment_body = payload.comment.body;

            // --- /approve ---
            if (comment_body.startsWith('/approve') || (comment_body.includes('@PriestyBot') && comment_body.includes('approve'))) {
              const message = comment_body.replace(/^\/approve\s*|@PriestyBot\s*approve\s*/i, '').trim();
              const review_body = message || `Passing along the approval from @${payload.sender.login}! Looks good to me. âœ…`;
              await github.rest.pulls.createReview({ ...repo, pull_number: issue.number, event: 'APPROVE', body: review_body });
              return;
            }
            // Other commands like /help, /comment, /request-changes would follow...
            // The existing text for these is already quite good, so no major changes needed.

  # This job specifically handles the /format command, as it needs to check out code
  format-code:
    if: |
      github.event.issue.pull_request &&
      github.event.comment.user.login == github.event.issue.user.login &&
      (startsWith(github.event.comment.body, '/format') || (contains(github.event.comment.body, '@PriestyBot') && contains(github.event.comment.body, 'format')))
    runs-on: ubuntu-latest
    steps:
      - name: Generate Bot Token
        id: get_token
        uses: actions/create-github-app-token@v1
        with:
          app_id: ${{ secrets.PRIESTYBOT_APP_ID }}
          private_key: ${{ secrets.PRIESTYBOT_PRIVATE_KEY }}

      - name: ðŸ’¬ Acknowledge Format Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.get_token.outputs.token }}
          script: |
            const ack_phrases = [
              "You got it! Let me work my magic with `black`. âœ¨ Pushing up some beautifully formatted code shortly.",
              "Time for a style makeover! I'm on it. ðŸŽ¨",
              "Consider it done. I'll get that code formatted and pushed right back."
            ];
            const message = ack_phrases[Math.floor(Math.random() * ack_phrases.length)];
            await github.rest.issues.createComment({
              ...context.repo, issue_number: context.issue.number, body: message
            });

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.issue.pull_request.url }}
          token: ${{ steps.get_token.outputs.token }}

      # (Setup and run black steps remain the same)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install black && black src

      - name: Commit and Push Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style(bot): auto-format Python code with black"
          commit_user_name: "PriestyBot [bot]"
          commit_user_email: "${{ secrets.PRIESTYBOT_APP_ID }}+PriestyBot[bot]@users.noreply.github.com"